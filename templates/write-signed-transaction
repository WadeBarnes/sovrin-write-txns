# ===================================================================================
# Write an Endorser signed Transaction to a Ledger
# -----------------------------------------------------------------------------------
# Writes an endorser signed transaction to a ledger.
# Requires an author signed transaction file.
#
#   - This is an endorser operation.
#
#   - In order to set the protocol version you MUST connect to a pool.
#     If you do not the protocolVersion in the resulting transaction will be set to 1.
#       - Libindy uses a global variable for the protocol version, you can not set it 
#         in the cli without connecting to a pool.
#
#   - A wallet containing the endorser's DID MUST be attacted and open.
#
#   - The DID of both the author and endorser MUST be present on the connected ledger.
#
# Params:
# walletName:
#   - The name of the wallet to be used for the operation.  Typically the endorser's wallet.
#   - Example; endorser_wallet
#
# storageType:
#   - The wallet storage type.
#   - Remote Wallet Example; postgres_storage
#   - Local Wallet Example; default
#
# storageConfig:
#   - The wallet storage configuration.
#   - Remote Wallet Example; '{"url":"192.168.65.3:5435"}'
#   - Local Wallet Example; '{}'
#
# storageCredentials:
#   - The wallet storage credentials.
#   - Remote Wallet Example; '{"account":"DB_USER","password":"DB_PASSWORD","admin_account":"postgres","admin_password":"mysecretpassword"}'
#   - Local Wallet Example; '{}'
#
# poolName:
#   - The name of the ledger pool to use during the operations.
#   - The transaction will be written to the ledger.
#   - Example; sandbox
#
# authorDid:
#   - The DID of the transaction author.
#   - Example; VePGZfzvcgmT3GTdYgpDiT
#
# endorserDid:
#   - The DID of the endorser.
#   - Example; DFuDqCYpeDNXLuc3MKooX3
#
# inputFile:
#   - The full path to the file containing the author signed transaction.
#   - Example; /tmp/dev_schema_signed.txt
# ===================================================================================

load-plugin library=libindystrgpostgres.so initializer=postgresstorage_init

pool connect ${poolName}

wallet attach ${walletName} storage_type=${storageType} storage_config=${storageConfig}
wallet open ${walletName} key storage_credentials=${storageCredentials}
did use ${endorserDid}
ledger get-nym did=${endorserDid}
ledger get-nym did=${authorDid}
did list
ledger load-transaction file=${inputFile}
ledger sign-multi
ledger custom context
wallet close
wallet detach ${walletName}
exit